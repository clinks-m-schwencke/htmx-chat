// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table person {
  id integer [primary key]
  name nvarchar
  created_at timestamp
  last_login_at timestamp
  updated_at timestamp
}

Table project {
  id integer [primary key]

}

Table person_in_project {
  person_id integer
  project_id integer
  created_at timestamp
}

Ref: person.id > person_in_project.person_id
Ref: project.id > person_in_project.project_id

Table person_watches_thread {
  person_id integer
  thread_id bigint
  created_at timestamp
}

Ref: person.id > person_watches_thread.person_id
Ref: thread.id > person_watches_thread.thread_id

Table thread {
  id bigint [primary key]
  project_id integer
  author integer
  body text
  is_edited bool
  is_deleted bool
}

Ref: project.id > thread.project_id
Ref: thread.author > person.id

Table message {
  id bigint [primary key]
  thread_id bigint
  body text
  is_edited bool
  is_deleted bool
}

Ref: message.thread_id > thread.id

// Table follows {
//   following_user_id integer
//   followed_user_id integer
//   created_at timestamp
// }

// Table users {
//   id integer [primary key]
//   username varchar
//   role varchar
//   created_at timestamp
// }

// Table posts {
//   id integer [primary key]
//   title varchar
//   body text [note: 'Content of the post']
//   user_id integer [not null]
//   status varchar
//   created_at timestamp
// }

// Ref user_posts: posts.user_id > users.id // many-to-one

// Ref: users.id < follows.following_user_id

// Ref: users.id < follows.followed_user_id


